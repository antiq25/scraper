#!/bin/bash

# Print ASCII art
cat << "EOF"
   _____ __  ______    ____  __________  ____  ___________      _____ __________  ___    ____  __________
  / ___//  |/  /   |  / __ \/_  __/ __ )/ __ \/_  __/__  /     / ___// ____/ __ \/   |  / __ \/ ____/ __ \
  \__ \/ /|_/ / /| | / /_/ / / / / __  / / / / / /    / /      \__ \/ /   / /_/ / /| | / /_/ / __/ / /_/ /
 ___/ / /  / / ___ |/ _, _/ / / / /_/ / /_/ / / /    / /__    ___/ / /___/ _, _/ ___ |/ ____/ /___/ _, _/
/____/_/  /_/_/  |_/_/ |_| /_/ /_____/\____/ /_/    /____/   /____/\____/_/ |_/_/  |_/_/   /_____/_/ |_|

EOF

# Create virtual environment and activate it
command virtualenv env

source "$HOME/antiq_scrape/env/bin/activate"


# Install dependencies
pip install -r requirements.txt

# Check if docker-compose is installed
if ! command -v docker-compose &> /dev/null
then
    echo "docker-compose could not be found"
    exit
fi

# Start Docker containers
docker-compose up -d

# Check if yarn is installed
if ! command -v yarn &> /dev/null
then
    echo "yarn could not be found"
    exit
fi

# Generate Prisma client and run database migrations
yarn prisma generate && yarn prisma migrate dev

# Print message to test API
echo "----------------------------------------------------------------------"
echo "TEST API WITH"
echo "----------------------------------------------------------------------"

# Print examples
cat ./examples.txt

# Check if npx is installed
if ! command -v npx &> /dev/null
then
    echo "npx could not be found"
    exit
fi

# Start nodemon to run dataApi.js
node js_bin/dataApi.js
